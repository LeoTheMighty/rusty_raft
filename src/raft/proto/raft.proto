syntax = "proto3";

package raft;

service RaftService {
  rpc ProcessRaftMessage(RaftMessage) returns (RaftResponse);
  rpc ProcessHeartbeat(Heartbeat) returns (Ack);
  rpc ProcessRequestVote(RequestVote) returns (RequestVoteResponse);
  rpc ProcessAppendEntries(AppendEntries) returns (AppendEntriesResponse);
  rpc ProcessRedirect(Redirect) returns (RedirectResponse);
}

// The request message containing the data
message RaftMessage {
  string data = 1;
}

// The response message containing the results
message RaftResponse {
  string result = 1;
}

// The Heartbeat message to be sent by the leader
message Heartbeat {
  uint64 term = 1;
  string leader_id = 2;
}

// The Ack response message to be sent by followers
message Ack {
  uint64 term = 1;
  bool success = 2;
}

message LogEntry {
  uint64 index = 1;
  uint64 term = 2;
  string data = 3;
}

message AppendEntries {
  uint64 term = 1;
  string leader_id = 2;
  uint64 prev_log_index = 3;
  uint64 prev_log_term = 4;
  repeated LogEntry entries = 5;
  uint64 leader_commit = 6;
}

message AppendEntriesResponse {
  uint64 term = 1;
  bool success = 2;
}

message Redirect {
  string data = 1;
}

message RedirectResponse {
  bool success = 1;
}

message RequestVote {
  uint64 term = 1;
  string candidate_id = 2;
}

message RequestVoteResponse {
  uint64 term = 1;
  bool vote_granted = 2;
}

